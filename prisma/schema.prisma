// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  firstName    String
  lastName     String
  emailAddress String      @unique
  password     String
  balance      Int         @default(100)
  wishlist     wishlist?
  purchases    Purchases[]
  reviews      Review[]
  cart         Cart?
  admin        Boolean?    @default(false)
}

model wishlist {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userID], references: [id], onDelete: Cascade)
  userID    String   @unique @db.ObjectId
  moviesIDs String[]
}

model Purchases {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userID], references: [id], onDelete: Cascade)
  userID    String   @unique @db.ObjectId
  moviesIDs String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  amount    Int
  rate      Int
  comment   String
}

model Review {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  user    User   @relation(fields: [userID], references: [id], onDelete: Cascade)
  userID  String @unique @db.ObjectId
  movieID String
  rate    Int
  comment String
}

model Cart {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  user     User     @relation(fields: [userID], references: [id], onDelete: Cascade)
  userID   String   @unique @db.ObjectId
  moviesIDs String[]
}

model Discount {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  code String
}

model Movie {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  price Int    @default(10)
}

